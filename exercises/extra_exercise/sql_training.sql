USE DATABASE AMAZON_AND_ECOMMERCE_WEBSITES_PRODUCT_VIEWS_AND_PURCHASES;
SHOW SCHEMAS;

SHOW TABLES IN datafeeds;
--SHOW TABLES IN INFORMATION_SCHEMA;

USE SCHEMA datafeeds;
SHOW TABLES;

SELECT * FROM PRODUCT_VIEWS_AND_PURCHASES LIMIT 10;

SELECT PRODUCT, SUB_CATEGORY, ROUND(SUM(ESTIMATED_PURCHASES),-3) AS total_sales
FROM PRODUCT_VIEWS_AND_PURCHASES 
WHERE MAIN_CATEGORY = 'CDs & Vinyl'
GROUP BY SUB_CATEGORY
ORDER BY total_sales DESC;

--What are the top 5-viewed products per year?
WITH RANKED_VIEWS AS(
SELECT 
TITLE,
YEAR,
ESTIMATED_VIEWS,
RANK() OVER(PARTITION BY year ORDER BY ESTIMATED_VIEWS DESC) as num_views
FROM PRODUCT_VIEWS_AND_PURCHASES
)
SELECT
  TITLE,
  YEAR,
  ESTIMATED_VIEWS,
  num_views,
FROM
  RANKED_VIEWS
WHERE
  num_views <= 5
;

SELECT DISTINCT YEAR FROM PRODUCT_VIEWS_AND_PURCHASES;


USE SNOWFLAKE_SAMPLE_DATA;

SHOW TABLES;

SELECT * FROM TPCDS_SF10TCL.WEB_SALES LIMIT 10;
SELECT * FROM TPCDS_SF10TCL.item LIMIT 10;
SELECT * FROM TPCDS_SF10TCL.date_dim LIMIT 10;

--WS_NET_PAID_INC_SHIP_TAX
--WS_SOLD_DATE_SK
-- --D_DATE_SK, D_DATE
---


USE SNOWFLAKE_LEARNING_DB;



SELECT index, "Order ID", TO_VARCHAR(TO_DATE(date, 'MM-DD-YY'), 'YYYY-MM-DD') as date, SKU, CATEGORY, QTY, AMOUNT, CURRENCY
FROM PUBLIC.AMAZON_SALES_REPORT;

SELECT CATEGORY, COUNT(QTY) as sum
FROM PUBLIC.AMAZON_SALES_REPORT
WHERE DATE LIKE '%-01-22'
GROUP BY CATEGORY
ORDER BY sum DESC;

WITH CTE_grand AS(
WITH CTE_date AS (
SELECT 
index, 
"Order ID", 
TO_DATE(date, 'MM-DD-YY') as date,
SKU, 
CATEGORY, 
QTY, 
AMOUNT, 
CURRENCY
FROM PUBLIC.AMAZON_SALES_REPORT
)
SELECT 
CATEGORY,
EXTRACT(YEAR FROM date) as year, 
EXTRACT(MONTH FROM date) as month,
COUNT(QTY) as amount
FROM CTE_date
GROUP BY 1, 2, 3
ORDER BY CATEGORY)
SELECT 
CATEGORY,
SUM(amount) OVER(PARTITION BY CATEGORY, year, month ORDER BY year, month) as cum_sum,
--AMOUNT
--COUNT(AMOUNT) AS QTY
FROM CTE_grand
ORDER BY category, year, month;